<?php

declare(strict_types=1);

namespace Test\CQApi;

use GuzzleHttp\Client;
use JavaReact\CQApi\CQCoupon;
use Monolog\Logger;
use PHPUnit\Framework\TestCase;

/**
 * Class OrderTest
 * @package Test\CQApi
 * @internal
 * @covers \JavaReact\CQApi\CQCoupon
 */
class CouponTest extends TestCase
{
    /** @var CQCoupon */
    protected $coupon;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $logger = new Logger("stdout");
        $logger->pushHandler(new StdoutHandler());
        $this->coupon = new CQCoupon('666', 'mykey', function () {
            return new Client([
                "base_uri" => \JavaReact\CQApi\Client::TEST_GATEWAY,
            ]);
        }, $logger);
    }

    /**
     * 商户购买卡劵接口
     */
    public function testOrderPay()
    {
        $response = $this->coupon->orderPay();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }

    /**
     * 商户卡券订单查询接口
     */
    public function testOrderQuery()
    {
        $response = $this->coupon->orderQuery();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }

    /**
     * 查询卡券品牌接口
     */
    public function testTypeList()
    {
        $response = $this->coupon->typeList();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }

    /**
     * 查询卡券品牌产品接口
     */
    public function testTypeGoodsList()
    {
        $response = $this->coupon->typeGoodsList();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }

    /**
     * 查询卡券产品库存接口
     */
    public function testGoodsStock()
    {
        $response = $this->coupon->goodsStock();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }

    /**
     * 商户查询卡券产品使用须知接口
     */
    public function testGoodsNotes()
    {
        $response = $this->coupon->goodsNotes();
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        $this->assertSame('666', $response->result("app_id"));
    }
}