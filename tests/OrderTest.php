<?php

declare(strict_types=1);

namespace Test\CQApi;


use GuzzleHttp\Client;
use Monolog\Logger;
use PHPUnit\Framework\TestCase;
use JavaReact\CQApi\Order;

/**
 * Class OrderTest
 * @package Test\CQApi
 * @internal
 * @covers \JavaReact\CQApi\Order
 */
class OrderTest extends TestCase
{
    /**
     * @var Order
     */
    private $order;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $logger = new Logger("stdout");
        $logger->pushHandler(new StdoutHandler());
        $this->order = new Order(Contains::TEST_APP_KEY, Contains::TEST_SECRET, function() {
            return new Client([
                "base_uri" => Contains::TEST_GATEWAY,
            ]);
        }, $logger);
    }

    public function testFuluOrderDataAddSuccess() {
        $customerOrderNo = md5(random_bytes(20));
        $response = $this->order->fuluOrderDataAdd(
            Contains::TEST_ORDER_DATA_ADD_SUCCESS_PHONE,
            $customerOrderNo,
            1024.00,
            Order::PACKET_KIND_MONTH
        );
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        // TODO 文档里的测试数据模拟成功订单无效
        /*
        print_r($response->json());
        //$this->assertSame(contains::TEST_MERCHANT_NAME, $response->result("name"));
        $response = $this->order->fuluOrderInfoGet($customerOrderNo);
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        print_r($response->json());
        */
    }

    public function testFuluOrderMobileAdd() {
        $customerOrderNo = md5(random_bytes(20));
        $response = $this->order->fuluOrderMobileAdd(
            50,
            Contains::TEST_ORDER_DATA_ADD_SUCCESS_PHONE,
            $customerOrderNo,
        );
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
        //print_r($response->json());
    }

    public function testFuluOrderCardAdd() {
        $customerOrderNo = md5(random_bytes(20));
        $response = $this->order->fuluOrderCardAdd(
            2,
            10000587,
            $customerOrderNo
        );
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
    }

    public function testFuluOrderDirectAdd() {
        $customerOrderNo = md5(random_bytes(20));
        $response = $this->order->fuluOrderDirectAdd(
            $customerOrderNo,
            10000586,
            "demo",
            2
        );
        $this->assertSame(200, $response->getStatusCode());
        $this->assertSame(true, $response->isSuccess());
    }
}